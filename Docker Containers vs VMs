Virtualization :

virtual machine is a system which acts exactly like a computer.
In simple terms, it makes it possible to run what appears to be on many separate computers on hardware, that is one computer. Each virtual machine requires its underlying operating system, and then the hardware is virtualized.

Docker:

Docker is popular virtualization software that helps its users in developing, deploying, monitoring, and running applications in a Docker Container with all their dependencies.

Docker containers include all dependencies (frameworks, libraries, etc.) to run an application in an efficient and bug-free manner.

Docker Containers have the following benefits: 

Light-weight
Applications run in isolation
Occupies less space
Easily portable and highly secure
Short boot-up time

Uses of VMs vs. Uses for Containers.

Both containers and VMs have benefits and drawbacks, and the ultimate decision will depend on your specific needs.

VMs are a better choice for running apps that require all of the operating systemâ€™s resources and functionality when you need to run multiple applications on  servers, or have a wide variety of operating systems to manage. If you have an existing monolithic application that you don't plan to or need to refactor into  microservices, VMs will continue to serve your use case well.

Containers are a better choice when your biggest priority is maximizing the number of applications or services running on a minimal number of servers and when  you need maximum portability. If you are developing a new app and you want to use a microservices architecture for scalability and portability, containers are  the way to go. Containers shine when it comes to cloud-native application development based on a microservices architecture.

You can also run containers on a virtual machine, making the question less of an either/or and more of an exercise in understanding which technology makes the  most sense for your workloads.

In a nutshell:

VMs help companies make the most of their infrastructure resources by expanding the number of machines you can squeeze out of a finite amount of hardware and software.
Containers help companies make the most of the development resources by enabling microservices and DevOps practices.

